name: Assetmgmt_$(Date:yyyyMMdd)$(Rev:.r)

trigger:
  branches:
    include:
    - 'main'
    - 'feature/*'

pr: none # Disable pull request triggers.

variables:
  - name: AWS_REGISTRY
    value: 644435390668.dkr.ecr.us-west-2.amazonaws.com
  - name: REPOSITORY
    value: assetmgmt
  - name: AWS_REGION_NAME
    value: us-west-2
  - name: IMAGE_TAG
    value: latest
  - name: AWS_CREDENTIAL_NAME
    value: AWS_ECR


stages:

- stage: Build
  jobs:
  - job: Build
    steps:
    - script: |
        aws ecr get-login-password --region $(AWS_REGION_NAME) | docker login --username AWS --password-stdin $(AWS_REGISTRY)
      displayName: 'Login to AWS'
      env:
        AWS_ACCESS_KEY_ID: $(AWS_ACCESS_KEY_ID)
        AWS_SECRET_ACCESS_KEY: $(AWS_SECRET_ACCESS_KEY)

    - task: Docker@2
      displayName: 'Build Image'
      inputs:
        command: build
        dockerfile: '$(Build.SourcesDirectory)/app/Dockerfile'
        buildContext: '$(Build.SourcesDirectory)/app'
        # containerRegistry: $(AWS_CREDENTIAL_NAME)
        repository: $(REPOSITORY)
        tags: $(IMAGE_TAG)


- stage: UnitTest
  jobs:
  - job: UnitTest
    steps:
    - script: |
        # Run Docker image
        docker run -dp 5000:5000 --name $(REPOSITORY)-app  $(AWS_REGISTRY)/$(REPOSITORY):$(IMAGE_TAG)

        # Install dependencies
        pip install pytest
        pip install requests

        # Run test case
        # pytest unit_tests.py
      displayName: 'Runing unit test'


- stage: Publish
  condition: contains(variables['build.sourceBranch'], 'refs/heads/main')
  jobs:
  - job: Publish
    steps:
    - task: ECRPushImage@1
      displayName: 'Push Docker Image to AWS ECR'
      inputs:
        awsCredentials: 'AWS_ECR'
        regionName: $(AWS_REGION_NAME)
        imageSource: 'imagename'
        sourceImageName: $(REPOSITORY)
        sourceImageTag: 'deploy'
        pushTag: $(IMAGE_TAG)
        repositoryName: $(REPOSITORY)
        



        
- stage: EndToEndTest
  jobs:
  - job: Test
    steps:
    - script: |
        # Run end to end tests
        # pytest e2e_tests.py
        echo "End to End Test"
      displayName: 'Run End to End Tests'